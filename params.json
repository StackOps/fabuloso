{"name":"Fabuloso","tagline":"Scripts to deploy Openstack-based architectures using fabric","body":"FABULOSO - Scripts to deploy Openstack-based architectures\r\n==========================================================\r\n\r\n# What is FABULOSO?\r\n\r\nFABuloso is a set of lightweight Fabric scripts built to deploy Openstack like always should be: easy.\r\n\r\n## What is Fabric?\r\n\r\n## What is Vagrant?\r\n\r\n## How do I install Vagrant?\r\n\r\n## How do I install Fabric in my compute?\r\n\r\n## Another deployment tool for Openstack???? AGGGGHHHHH!!!!!\r\n\r\nRelax. This is how StackOps deploys and manages Openstack clouds. There are really cool tools our there, but we\r\nthink we have to focus in doing things simpler and easier.\r\n\r\nWe think the Openstack community suffers of the 'Golden Hammer' syndrome about all these nice deployment toos.\r\nFABuloso only does what it does, and it does it very well.\r\n\r\n## What license do you use?\r\n\r\nApache 2.0 license, of course.\r\n\r\n## This looks cool! Can I colaborate?\r\n\r\nSure, just push it.\r\n\r\n## What version of Openstack is supported?\r\n\r\nRight now folsom stable. Just check the branches to see different versions. Obvioulsy this will change.\r\n\r\n\r\n# Deployment example of a single node on Vagrant\r\n\r\n\r\n## Install fabric\r\n\r\nIf you are using Ubuntu 12.04 LTS or newer.\r\n```shell\r\n       sudo apt-get install fabric\r\n```\r\n\r\n## Vagrant\r\n\r\nCreate the  directory where you want to create your vagrant environment. for example:\r\n\r\n```shell\r\n       mkdir fabuloso\r\n```\r\n\r\n## Download our test box\r\n\r\nGo to the directory that you have crated and download the stackops box\r\n\r\n```shell\r\n       cd fabuloso/\r\n       vagrant box add stackops-distro-base-v2 https://dl.dropbox.com/u/527582/stackops-distro-base-v2.box\r\n```\r\n\r\n## Download the FABuloso repository in the same directory\r\n\r\n```shell\r\n       git clone git@github.com:StackOps/fabuloso.git\r\n```\r\n\r\n## Run the box stackops-distro-base-v2\r\n\r\n```shell\r\n       vagrant up\r\n```\r\n\r\n## Execute singlenode.sh file to configurate your box.\r\n\r\nThis can take a while.\r\n```shell\r\n       ./singlenode.sh\r\n```\r\n\r\n# Running FABuloso in other operating Systems. Bootstrapping\r\n\r\n## Installation script\r\nThe scripts needs some basic configuration to work:\r\n- An openssh-server installed\r\n- The stackops user without password and member of the sudo group\r\n- A public key. With the scripts comes a non secure private/public key combo for default installation. Please change it\r\n  asap.\r\n\r\nThe bootstrap script for any OS with a Bourne shell is very simple. You can use it like this:\r\n\r\n```shell\r\nwget -O - https://raw.github.com/StackOps/fabuloso/master/bootstrap/init.sh | sudo sh\r\n```\r\n\r\n##  Configuring the network\r\n\r\nDepending on the component type, you will have to configure the network with different number of interfaces and\r\nconfigurations.\r\n\r\n\r\n# How to mimic the StackOps discovery agent\r\n\r\n## Why you need it\r\nSometimes you will need to perform a manual installation of a node without the discovery process. You need to perform\r\nthe following steps:\r\n\r\nIf you want to perform a manual discovery of your existing nodes you can follow these steps:\r\n\r\n## Install the StackOps Community Distro in the node\r\n\r\nAnd configure the network manually during the installation.\r\n\r\n## Change the network configuration\r\n\r\nPerform the following steps:\r\n\r\n1. Log into the server as root, and modify the /etc/network/interfaces file. The eth0 interface must be in dhcp mode.\r\n2. Delete the entries in /etc/hosts referencing the old network configuration\r\n3. Reboot the server\r\n\r\n# Execute the fake discovery script\r\n\r\nThe fake discovery script works for StackOps Distro and Ubuntu 12.04 Server OS. Login as root and execute:\r\n\r\n````shell\r\nwget -O - https://raw.github.com/StackOps/fabuloso/master/bootstrap/fake-discovery.sh | sudo sh\r\n```\r\n\r\nAfter a few seconds you will see the server in the Head-Manager Pool. The server is 'hot spare' spare server.\r\n\r\n## Configure IPMI parameters of the servers\r\n\r\nIt's a good practice to configure the IPMI IP for management of the new node:\r\n\r\n```shell\r\nhead-manage pool modify MAC lom_ip IPMI_IP\r\n```\r\n\r\nRemember that the username and password are stored in the parameters of the zone.\r\n\r\n## Active the hot spare server in the zone.\r\n\r\nACtive the hot spare server following the same process used for standard discovered nodes in the pool. The \r\nconfiguration process will start.\r\n","google":"UA-21651960-4","note":"Don't delete this file! It's used internally to help with page regeneration."}